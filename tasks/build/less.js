var path = require('path');

var config  = require('../config');
var aux = require('../auxiliary');

// Message to be prepended to all .css files generated via less
var message = [
    '/*-----------------------------------------------------',
    ' | !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! |',
    ' | !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! |',
    ' | !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! |',
    ' | This file was generated by LESS.                   |',
    ' | All modifications to it will be lost, mercilessly! |',
    ' | !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! |',
    ' | !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! |',
    ' | !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! |',
    ' -----------------------------------------------------*/\n\n',
].join('\n');

module.exports = function (gulp, $) {

    /**
     * Task for less.
     */
    gulp.task('less', function () {

        // UNGLYYY
        // TODO: MAKE THE RIGHT WAY
        function isNotIndexCss(file) {
            return path.basename(file.path, '.css') !== 'index';
        }

        return gulp.src(config.lessDir)
            // .pipe($.changed(config.srcDir, { extension: '.css' }))
            // .pipe($.sourcemaps.init())
                .pipe($.less())
                .on('error', $.notify.onError({
                    title: 'Less compiling error',
                    message: '<%= error.message %>',
                    open: 'file:///<%= error.filename %>',
                    sound: 'Glass',
                    // Basso, Blow, Bottle, Frog, Funk, Glass, Hero,
                    // Morse, Ping, Pop, Purr, Sosumi, Submarine, Tink
                    icon: path.join(config.root, 'logo.png'),
                }))
                .pipe($.autoprefixer({
                    browsers: [
                        'ie >= 10',
                        'ie_mob >= 10',
                        'ff >= 30',
                        'chrome >= 34',
                        'safari >= 7',
                        'opera >= 23',
                        'ios >= 7',
                        'android >= 4.4',
                        'bb >= 10'
                    ],
                    cascade: false,
                }))
                // .pipe($.header(message))
            .pipe($.if(isNotIndexCss, $.polymerizeCss({
                styleId: function (file) {
                    var basename = path.basename(file.path, '.css');

                    return basename + '-styles';
                }
            })))
            .pipe($.if(isNotIndexCss, $.rename(function (path) {
                path.basename += '-styles';
                path.extname = '.html';
            })))
            // .pipe($.sourcemaps.write(config.mapsDir))
            // Put files at source dir in order to use them for vulcanization
            .pipe(gulp.dest(config.srcDir))
            .pipe($.size({
                title: 'less',
                showFiles: false
            }));
    });
};